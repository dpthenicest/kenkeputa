// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // change to "mysql" or "sqlite" if needed
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  fullName   String
  email      String    @unique
  password   String
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  cart       Cart?
  orders     Order[]
}

model Product {
  id             Int          @id @default(autoincrement())
  name           String
  description    String?
  price          Decimal       @db.Decimal(10, 2)
  stockQuantity  Int           @default(0)
  imageUrl       String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  cartItems      CartItem[]
  orderItems     OrderItem[]
}

model Cart {
  id         Int         @id @default(autoincrement())
  userId     Int?        @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  user       User?       @relation(fields: [userId], references: [id])
  cartItems  CartItem[]
}

model CartItem {
  id         Int       @id @default(autoincrement())
  cartId     Int
  productId  Int
  quantity   Int        @default(1)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  cart       Cart       @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product    Product    @relation(fields: [productId], references: [id])
}

model Order {
  id           Int           @id @default(autoincrement())
  userId       Int
  totalAmount  Decimal        @db.Decimal(10, 2)
  status       OrderStatus    @default(PENDING)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  user         User           @relation(fields: [userId], references: [id])
  orderItems   OrderItem[]
}

model OrderItem {
  id          Int       @id @default(autoincrement())
  orderId     Int
  productId   Int
  quantity    Int
  unitPrice   Decimal   @db.Decimal(10, 2)
  subtotal    Decimal   @db.Decimal(10, 2)
  createdAt   DateTime  @default(now())

  order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product   @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}